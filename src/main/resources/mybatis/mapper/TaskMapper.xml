<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="essw.com.scheduler.mapper.TaskMapper">
  <resultMap id="BaseResultMap" type="essw.com.scheduler.model.Task">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="deal_datetime" jdbcType="TIMESTAMP" property="dealDatetime" />
    <result column="task_type" jdbcType="VARCHAR" property="taskType" />
    <result column="handle_obj" jdbcType="VARCHAR" property="handleObj" />
    <result column="task_status" jdbcType="INTEGER" property="taskStatus" />
    <result column="add_on" jdbcType="TIMESTAMP" property="addOn" />
    <result column="start_on" jdbcType="TIMESTAMP" property="startOn" />
    <result column="finish_on" jdbcType="TIMESTAMP" property="finishOn" />
    <result column="update_on" jdbcType="TIMESTAMP" property="updateOn" />
    <result column="extend_info" jdbcType="VARCHAR" property="extendInfo" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, deal_datetime, task_type, handle_obj, task_status, add_on, start_on, finish_on, 
    update_on, extend_info
  </sql>
  <select id="selectByExample" parameterType="essw.com.scheduler.model.TaskExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tasks
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tasks
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tasks
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="essw.com.scheduler.model.TaskExample">
    delete from tasks
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="essw.com.scheduler.model.Task">
    insert into tasks (id, deal_datetime, task_type, 
      handle_obj, task_status, add_on, 
      start_on, finish_on, update_on, 
      extend_info)
    values (#{id,jdbcType=INTEGER}, #{dealDatetime,jdbcType=TIMESTAMP}, #{taskType,jdbcType=VARCHAR}, 
      #{handleObj,jdbcType=VARCHAR}, #{taskStatus,jdbcType=INTEGER}, #{addOn,jdbcType=TIMESTAMP}, 
      #{startOn,jdbcType=TIMESTAMP}, #{finishOn,jdbcType=TIMESTAMP}, #{updateOn,jdbcType=TIMESTAMP}, 
      #{extendInfo,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="essw.com.scheduler.model.Task">
    insert into tasks
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="dealDatetime != null">
        deal_datetime,
      </if>
      <if test="taskType != null">
        task_type,
      </if>
      <if test="handleObj != null">
        handle_obj,
      </if>
      <if test="taskStatus != null">
        task_status,
      </if>
      <if test="addOn != null">
        add_on,
      </if>
      <if test="startOn != null">
        start_on,
      </if>
      <if test="finishOn != null">
        finish_on,
      </if>
      <if test="updateOn != null">
        update_on,
      </if>
      <if test="extendInfo != null">
        extend_info,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="dealDatetime != null">
        #{dealDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="taskType != null">
        #{taskType,jdbcType=VARCHAR},
      </if>
      <if test="handleObj != null">
        #{handleObj,jdbcType=VARCHAR},
      </if>
      <if test="taskStatus != null">
        #{taskStatus,jdbcType=INTEGER},
      </if>
      <if test="addOn != null">
        #{addOn,jdbcType=TIMESTAMP},
      </if>
      <if test="startOn != null">
        #{startOn,jdbcType=TIMESTAMP},
      </if>
      <if test="finishOn != null">
        #{finishOn,jdbcType=TIMESTAMP},
      </if>
      <if test="updateOn != null">
        #{updateOn,jdbcType=TIMESTAMP},
      </if>
      <if test="extendInfo != null">
        #{extendInfo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="essw.com.scheduler.model.TaskExample" resultType="java.lang.Long">
    select count(*) from tasks
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tasks
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.dealDatetime != null">
        deal_datetime = #{record.dealDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.taskType != null">
        task_type = #{record.taskType,jdbcType=VARCHAR},
      </if>
      <if test="record.handleObj != null">
        handle_obj = #{record.handleObj,jdbcType=VARCHAR},
      </if>
      <if test="record.taskStatus != null">
        task_status = #{record.taskStatus,jdbcType=INTEGER},
      </if>
      <if test="record.addOn != null">
        add_on = #{record.addOn,jdbcType=TIMESTAMP},
      </if>
      <if test="record.startOn != null">
        start_on = #{record.startOn,jdbcType=TIMESTAMP},
      </if>
      <if test="record.finishOn != null">
        finish_on = #{record.finishOn,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateOn != null">
        update_on = #{record.updateOn,jdbcType=TIMESTAMP},
      </if>
      <if test="record.extendInfo != null">
        extend_info = #{record.extendInfo,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tasks
    set id = #{record.id,jdbcType=INTEGER},
      deal_datetime = #{record.dealDatetime,jdbcType=TIMESTAMP},
      task_type = #{record.taskType,jdbcType=VARCHAR},
      handle_obj = #{record.handleObj,jdbcType=VARCHAR},
      task_status = #{record.taskStatus,jdbcType=INTEGER},
      add_on = #{record.addOn,jdbcType=TIMESTAMP},
      start_on = #{record.startOn,jdbcType=TIMESTAMP},
      finish_on = #{record.finishOn,jdbcType=TIMESTAMP},
      update_on = #{record.updateOn,jdbcType=TIMESTAMP},
      extend_info = #{record.extendInfo,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="essw.com.scheduler.model.Task">
    update tasks
    <set>
      <if test="dealDatetime != null">
        deal_datetime = #{dealDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="taskType != null">
        task_type = #{taskType,jdbcType=VARCHAR},
      </if>
      <if test="handleObj != null">
        handle_obj = #{handleObj,jdbcType=VARCHAR},
      </if>
      <if test="taskStatus != null">
        task_status = #{taskStatus,jdbcType=INTEGER},
      </if>
      <if test="addOn != null">
        add_on = #{addOn,jdbcType=TIMESTAMP},
      </if>
      <if test="startOn != null">
        start_on = #{startOn,jdbcType=TIMESTAMP},
      </if>
      <if test="finishOn != null">
        finish_on = #{finishOn,jdbcType=TIMESTAMP},
      </if>
      <if test="updateOn != null">
        update_on = #{updateOn,jdbcType=TIMESTAMP},
      </if>
      <if test="extendInfo != null">
        extend_info = #{extendInfo,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="essw.com.scheduler.model.Task">
    update tasks
    set deal_datetime = #{dealDatetime,jdbcType=TIMESTAMP},
      task_type = #{taskType,jdbcType=VARCHAR},
      handle_obj = #{handleObj,jdbcType=VARCHAR},
      task_status = #{taskStatus,jdbcType=INTEGER},
      add_on = #{addOn,jdbcType=TIMESTAMP},
      start_on = #{startOn,jdbcType=TIMESTAMP},
      finish_on = #{finishOn,jdbcType=TIMESTAMP},
      update_on = #{updateOn,jdbcType=TIMESTAMP},
      extend_info = #{extendInfo,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>